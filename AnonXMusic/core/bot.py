from pyrogram import Client, errors
from pyrogram.enums import ChatMemberStatus, ParseMode

import config

from ..logging import LOGGER


class Anony(Client):
    def __init__(self):
        LOGGER(__name__).info(f"Starting Bot...")
        super().__init__(
            name="vin‚úò Ä·¥è ô·¥è·¥õ",
            api_id=config.API_ID,
            api_hash=config.API_HASH,
            bot_token=config.BOT_TOKEN,
            in_memory=True,
            parse_mode=ParseMode.HTML,
            max_concurrent_transmissions=7,
        )

    async def start(self):
        await super().start()
        self.id = self.me.id
        self.name = self.me.first_name + " " + (self.me.last_name or "")
        self.username = self.me.username
        self.mention = self.me.mention

        try:
            await self.send_message(
                chat_id=config.LOGGER_ID,
                text=f"<u><b>¬ª  è·¥ú·¥ú·¥ã…™ ·¥ç·¥ús…™·¥Ñ ·¥Ä·¥Ñ·¥õ…™·¥†·¥á! üî•",
            )
        except (errors.ChannelInvalid, errors.PeerIdInvalid):
            LOGGER(__name__).error(
                " ô·¥è·¥õ …¢·¥Ä…¢·¥Ä ü ·¥Ä·¥Ñ·¥Ñ·¥ás  ü·¥è…¢ …¢ Ä·¥è·¥ú·¥ò/·¥Ñ ú·¥Ä…¥…¥·¥á ü.  ü·¥ú ·¥õ·¥Ä·¥ç ô·¥Ä ú…™…¥ ·¥Ö·¥ú ü·¥ú  ô·¥è·¥õ ·¥ã·¥á  ü·¥è…¢ …¢ Ä·¥è·¥ú·¥ò/·¥Ñ ú·¥Ä…¥…¥·¥á ü  ü·¥ú."
            )
            exit()
        except Exception as ex:
            LOGGER(__name__).error(
                f" ô·¥è·¥õ …¢·¥Ä…¢·¥Ä ü ·¥Ä·¥Ñ·¥Ñ·¥ás  ü·¥è…¢ …¢ Ä·¥è·¥ú·¥ò/·¥Ñ ú·¥Ä…¥…¥·¥á ü.\n  Reason : {type(ex).__name__}."
            )
            exit()

        a = await self.get_chat_member(config.LOGGER_ID, self.id)
        if a.status != ChatMemberStatus.ADMINISTRATOR:
            LOGGER(__name__).error(
                "·¥Ä·¥Ö·¥ç…™…¥…™…¥ ·¥Ö·¥ú ü·¥ú …¥…¢·¥á…¥·¥õ·¥è·¥õ  ô·¥è·¥õ …¥ è·¥Ä ·¥Ö…™  ü·¥è…¢ …¢ Ä·¥è·¥ú·¥ò/·¥Ñ ú·¥Ä…¥…¥·¥á ü  ü·¥ú."
            )
            exit()
        LOGGER(__name__).info(f"·¥Äss…™s·¥õ·¥Ä…¥·¥õ  è·¥ú·¥ú·¥ã…™ s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö  üî•{self.name}")

    async def stop(self):
        await super().stop()
